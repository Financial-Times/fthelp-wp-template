@font-face {
  src: url("//origami-build.ft.com/v2/files/o-fonts-assets@1.3.0/MetricWeb-Semibold.woff?#iefix") format("woff");
  font-family: MetricWeb;
  font-weight: 600;
  font-style: normal; }

body {
  background-color: #fff1e0;
  margin: 0;
  padding: 0; }

.header-sub-brand {
  background-color: #4e96eb; }
  .header-sub-brand .o-typography-subhead {
    color: #ffffff;
    margin: 0;
    line-height: 70px; }

.breadcrumbs {
  background-color: #ffffff;
  border-bottom: solid 1px grey;
  color: #3a70af;
  line-height: 28px;
  font-size: 16px;
  text-transform: uppercase; }
  .breadcrumbs a {
    text-decoration: none; }
    .breadcrumbs a:hover {
      text-decoration: underline; }

form.searchform {
  margin-top: 20px; }
  form.searchform .o-icons-icon--search {
    width: 28px;
    height: 17px; }

.primary-action .chat, .primary-action .contact, .primary-action .new-ft, .primary-action .old-ft {
  padding: 0 0 0 80px;
  background-repeat: no-repeat; }
  .primary-action .chat div, .primary-action .contact div, .primary-action .new-ft div, .primary-action .old-ft div {
    font-family: MetricWeb, sans-serif;
    font-weight: bold;
    color: #333333;
    font-size: 28px; }
  .primary-action .chat .o-buttons, .primary-action .contact .o-buttons, .primary-action .new-ft .o-buttons, .primary-action .old-ft .o-buttons {
    background-color: #4e96eb;
    border-color: #4e96eb;
    color: #ffffff; }

.primary-action .chat {
  background-image: url("images/primary-action/live-chat.png"); }

.primary-action .contact {
  background-image: url("images/primary-action/contact-us.png"); }

.primary-action .new-ft {
  background-image: url("images/primary-action/take-a-tour.png"); }

.primary-action .old-ft {
  background-image: url("images/primary-action/opt-out.png"); }

.home-template ul {
  -moz-column-count: 2;
  -moz-column-gap: 20px;
  -webkit-column-count: 2;
  -webkit-column-gap: 20px;
  column-count: 2;
  column-gap: 20px;
  padding-left: 0;
  margin-top: 0; }

/*# sourceMappingURL=data:application/json;base64, */
