@font-face {
  src: url("//origami-build.ft.com/v2/files/o-fonts-assets@1.3.0/MetricWeb-Semibold.woff?#iefix") format("woff");
  font-family: MetricWeb;
  font-weight: 600;
  font-style: normal; }

body {
  background-color: #fff1e0;
  margin: 0;
  padding: 0; }

/*# sourceMappingURL=data:application/json;base64, */
