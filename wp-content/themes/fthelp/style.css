@font-face {
  src: url("//origami-build.ft.com/v2/files/o-fonts-assets@1.3.0/MetricWeb-Semibold.woff?#iefix") format("woff");
  font-family: MetricWeb;
  font-weight: 600;
  font-style: normal; }

body {
  background-color: #fff1e0;
  margin: 0;
  padding: 0; }

.breadcrumbs {
  background-color: #ffffff;
  border-bottom: solid 1px grey;
  color: #oColorsGetPaletteColor "org-b2c-dark";
  line-height: 28px;
  font-size: 16px;
  text-transform: uppercase; }
  .breadcrumbs a {
    text-decoration: none; }
    .breadcrumbs a:hover {
      text-decoration: underline; }

.home-template ul {
  -moz-column-count: 2;
  -moz-column-gap: 20px;
  -webkit-column-count: 2;
  -webkit-column-gap: 20px;
  column-count: 2;
  column-gap: 20px;
  padding-left: 0;
  margin-top: 0; }

/*# sourceMappingURL=data:application/json;base64, */
