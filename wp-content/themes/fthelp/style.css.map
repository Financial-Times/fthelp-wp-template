{"version":3,"sources":["../../bower_components/o-fonts/src/scss/_mixins.scss","style.scss","../../bower_components/o-fonts/src/scss/_variables.scss","../../bower_components/o-fonts/src/scss/_functions.scss","../../bower_components/o-colors/src/scss/_palette.scss","../../bower_components/o-grid/src/scss/_main.scss","../../bower_components/o-grid/src/scss/_variables.scss","../../bower_components/sass-mq/_mq.scss","../../bower_components/o-icons/scss/_mixins.scss","../../bower_components/o-buttons/scss/_mixins.scss","../../bower_components/o-buttons/scss/_variables.scss","home.scss","../../bower_components/o-colors/src/scss/_mixins.scss","../../bower_components/o-typography/scss/_body_common.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Font-face declaration sources\n///\n/// @param {String} fontName - path to the file, without the file extension\n@mixin oFontsSource($fontName) {\n\tsrc: url(oFontsUseAsset($fontName + '.woff?#iefix')) format('woff');\n}\n\n/// Font-face declaration for a given font family\n///\n/// @param {String} $family - one of $o-fonts-families\n/// @param {String} $weight [regular] - one of $_o-fonts-weights\n/// @param {String} $style [normal]\n@mixin oFontsInclude($family, $weight: regular, $style: normal) {\n\t@if $family == 'Clarion' {\n\t\t@warn \"Clarion has been removed, no font will be included. Use Georgia instead\";\n\t}\n\t@if $weight == normal {\n\t\t$weight: regular;\n\t}\n\t$font-exists: false;\n\t// Check if the font has already been included\n\t// If so, no need to output another @font-face declaration\n\t$font-is-already-included: map-has-key($_o-fonts-families-included, #{$family}-#{$weight}-#{$style});\n\n\t@if $font-is-already-included == false {\n\t\t@if map-has-key($o-fonts-families, $family) == false {\n\t\t\t@warn 'Font #{$family} not found. Must be one of $o-fonts-families.';\n\t\t} @else {\n\t\t\t@if (_oFontsVariantExists($family, $weight, $style)) {\n\t\t\t\t$font-exists: true;\n\t\t\t} @else {\n\t\t\t\t@warn 'Variant \"weight: #{$weight}, style: #{$style}\" not found for \"#{$family}\". @font-face rule will not be output.';\n\t\t\t}\n\t\t}\n\n\t\t@if ($font-exists) {\n\t\t\t// Files are named as follows\n\t\t\t// Name-WeightType\n\t\t\t// MetricWeb-Regular              (regular normal)\n\t\t\t// MetricWeb-RegularItalic        (regular italic)\n\t\t\t// MetricWeb-Bold                 (bold normal)\n\t\t\t// MetricWeb-BoldItalic           (bold italic)\n\n\t\t\t// By default, suffix is the weight\n\t\t\t$font-suffix: _oFontsStringCapitalise($weight);\n\n\t\t\t@if ($style != 'normal') {\n\t\t\t\t$capitalised-weight: _oFontsStringCapitalise($weight);\n\t\t\t\t$capitalised-style: _oFontsStringCapitalise($style);\n\t\t\t\t$font-suffix: #{$capitalised-weight}#{$capitalised-style};\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t\t\t@include oFontsSource(#{$family}-#{$font-suffix});\n\t\t\t\tfont-family: $family;\n\t\t\t\tfont-weight: oFontsWeight($weight);\n\t\t\t\tfont-style: $style;\n\t\t\t}\n\n\t\t\t// Add to the list of already included families / variants\n\t\t\t$_o-fonts-families-included: map-merge($_o-fonts-families-included, (#{$family}-#{$weight}-#{$style}: true)) !global;\n\t\t}\n\t}\n}\n\n/// Output @font-face declarations for all the font families\n@mixin oFontsIncludeAll {\n\t@each $family, $properties in $o-fonts-families {\n\t\t@each $variant in map-get($properties, variants) {\n\t\t\t@include oFontsInclude($family, map-get($variant, weight), map-get($variant, style));\n\t\t}\n\t}\n}\n","\n\n$o-grid-is-silent: true;\n@import 'o-grid/main';\n\n$o-colors-is-silent: true;\n@import 'o-colors/main';\n\n$o-buttons-is-silent: true;\n@import 'o-buttons/main';\n\n$o-typography-is-silent: true;\n@import 'o-typography/main';\n\n$o-fonts-is-silent: true;\n@import 'o-fonts/main';\n\n@include oFontsInclude(MetricWeb, $weight: semibold);\n\n@include oFontsInclude(FinancierDisplayWeb);\n\n@mixin MetricWebRegular() {\n  font-family: oFontsGetFontFamilyWithFallbacks(MetricWeb);\n  font-weight: 400;\n}\n\n@mixin MetricWebSemiBold() {\n  font-family: oFontsGetFontFamilyWithFallbacks(MetricWeb);\n  font-weight: 600;\n}\n\n@mixin content-text{\n  font-family:georgia;\n  font-size:18px;\n  line-height:26px;\n  color:oColorsGetPaletteColor(\"grey-tint5\");\n}\n\n\nbody {\n  @include MetricWebRegular();\n  background-color: oColorsGetPaletteColor(\"pink\");\n  margin: 0;\n  padding: 0;\n}\n\n@mixin layout-container (){\n  @include oGridContainer();\n  @include oGridRespondTo($until: M) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }    \n  @include oGridRespondTo($from: M) {\n    padding-left: 30px;\n    padding-right: 30px;\n  }    \n}\n\n\n.header-sub-brand-container {\n\n  background-color: oColorsGetPaletteColor(\"org-b2c-dark\");\n\n  .header-sub-brand {\n    @include layout-container();\n    .o-typography-subhead {\n      a {\n        color: oColorsGetPaletteColor(\"white\");\n        text-decoration: none;\n        &:hover {\n          text-decoration: none;\n        }\n\n      }\n      margin:0;\n\n      @include oGridRespondTo($until: M) {\n        font-size: 18px;\n        line-height: 55px;\n      }    \n      @include oGridRespondTo($from: M) {\n        font-size: 40px;\n        line-height: 80px;\n      }    \n    }\n  }\n}\n\n.breadcrumbs-container {\n  background-color: oColorsGetPaletteColor(\"white\");\n  border-bottom:solid 1px grey;\n\n  .breadcrumbs  {\n    @include layout-container();\n\n    color: oColorsGetPaletteColor(\"org-b2c-dark\");\n    line-height:29px;\n    font-size: 14px;\n    text-transform: uppercase;\n\n    span {\n      @include MetricWebSemiBold();\n      color: oColorsGetPaletteColor(\"org-b2c-dark\");\n      &:nth-last-child(2) {\n        display: none;\n      }\n    }\n    a {\n      @include MetricWebSemiBold();\n      color: oColorsGetPaletteColor(\"org-b2c-dark\");\n      text-decoration: none;\n      &:hover {\n        text-decoration: none;\n        border-bottom: 1px dotted oColorsGetPaletteColor(\"org-b2c-dark\");\n      }\n      span {\n        @include MetricWebSemiBold();\n        color: oColorsGetPaletteColor(\"org-b2c-dark\");\n      }\n    }\n    .separator {\n      @include oIconsGetIcon('arrow-right', oColorsGetPaletteColor('org-b2c-dark'), 10);\n      display: inline;\n      background-size: 15px;\n      padding: 0 9px;\n      &:nth-last-child(-n+3) {\n        display: none;\n      }\n\n    }\n  }\n}\n\n.search-template-container {\n  .breadcrumbs-container {\n    .breadcrumbs {\n      span {\n        // display: none;\n        &.root {\n          // display:inline-block;\n        }\n      }\n    }    \n  }\n}\n\n.search-form {\n  @include layout-container();\n  margin-top: 20px;\n  form.searchform {\n    .o-forms {\n      padding-left: 0;\n      padding-right: 0;\n      max-width: inherit;\n    }\n    .o-forms__text {\n      max-width: inherit;\n      font-size: 18px;\n    }\n    .o-buttons {\n      padding: 0;\n      .o-icons-icon--search {\n        @include oIconsGetIcon('search', oColorsGetPaletteColor('white'), 32);\n        width:38px;\n        height: 34px;\n      }\n    }\n  }\n}\n\nhtml.core .chat-online {\n  display: none;\n}\nhtml.core .chat-offline {\n  display: block;\n}\n.chat, .contact, .new-ft, .old-ft {\n  margin-top: 29px;\n  padding-bottom:29px;\n  padding-left: 105px;\n  background-position: 0% 30%;\n  background-repeat: no-repeat;\n\n  div {\n    @include MetricWebSemiBold();\n    color: oColorsGetPaletteColor(\"grey-tint5\");\n    font-size: 24px;\n    min-height: 56px;\n  }\n  .o-buttons {\n    @include oButtonsSize(big);\n  }\n\n  @include oGridRespondTo($until: M) {\n    margin-top: 19px;\n    padding-bottom:19px;\n    padding-left: 70px;\n    background-position: 0% 20%;\n    background-size: 50px 50px;\n    div {\n      font-size: 22px;\n      min-height: 32px;\n      padding-bottom: 5px;\n    }\n    .o-buttons {\n      @include oButtonsSize(medium);\n    }\n  }    \n}\n.chat {\n  background-image: url(\"images/primary-action/live-chat.png\");\n}\n.contact {\n  background-image: url(\"images/primary-action/contact-us.png\");\n}\n.new-ft {\n  background-image: url(\"images/primary-action/take-a-tour.png\");\n}\n.old-ft {\n  background-image: url(\"images/primary-action/opt-out.png\");\n}\n\n.back-to-top-container {\n  @include layout-container();\n  border-top: none;\n  @include oGridRespondTo($until: M) {\n    text-align: center;\n  }\n\n  a.back-to-top {\n    font-family: oFontsGetFontFamilyWithFallbacks(MetricWeb);\n    text-decoration: none;\n    font-size:20px;\n    line-height: 40px;\n    color:oColorsGetPaletteColor(\"org-b2c-dark\");\n    &:hover {\n      text-decoration: none;\n      border-bottom: 1px dotted oColorsGetPaletteColor(\"org-b2c-dark\");\n    }\n    i {\n      @include oIconsGetIcon('arrow-up', oColorsGetPaletteColor('org-b2c-dark'), 14);\n      padding: 0 5px;\n    }\n  }\n}\n\n.list-caret {\n  @include oIconsGetIcon('arrow-right', oColorsGetPaletteColor('org-b2c-dark'), 20);\n  display: inline;\n  background-size: 20px;  \n  padding: 0 5px;\n}\n\n.list-li-caret {\n  li {\n    list-style: none;\n    padding: 12px 0;\n    a {\n      @include MetricWebSemiBold();\n      display: inline-block;\n      padding:0;\n      text-decoration: none;\n      text-transform: none;\n      font-size:20px;\n      line-height: 26px;\n      color:oColorsGetPaletteColor(\"org-b2c-dark\");\n      border-bottom: 1px dotted oColorsGetPaletteColor(\"pink\");\n      &:hover {\n        color:oColorsGetPaletteColor(\"org-b2c-dark\");\n        text-decoration: none;\n        border-bottom: 1px dotted oColorsGetPaletteColor(\"org-b2c-dark\");\n      }\n      span.caret {\n        @extend .list-caret;\n      }\n    }\n  }\n}\n\n.list-2-column {\n  @include oGridRespondTo($from: M) {\n    -moz-column-count: 2;\n    -moz-column-gap: 20px;\n    -webkit-column-count: 2;\n    -webkit-column-gap: 20px;\n    column-count: 2;\n    column-gap: 20px;\n  }\n}\n\n\n\n// ----------------------------------------------------------------------------------------------------------\n\n@import './home';\n\n// ----------------------------------------------------------------------------------------------------------\n\n.page-heading-container {\n\n  H1 {\n    @include MetricWebSemiBold();\n    color: oColorsGetPaletteColor(\"grey-tint5\");\n    font-size: 40px;\n    margin: 0;\n    @include oGridRespondTo($until: M) {\n      font-size: 32px;\n      margin-top: 25px;\n    }\n\n  }\n  \n  .heading {\n    @include layout-container();\n    > div {\n      @include oGridRow();\n      div.title-container {\n        @include oGridColspan((default: hide, S:hide, M: 8));\n      }\n      div.chat-container {\n        @include oGridColspan((default: 12, S:12, M: 4));\n      }\n    }\n\n    .chat {\n      margin-top: 0;\n      padding-bottom: 16px;\n      @include oGridRespondTo($until: M) {\n        border-bottom: solid 1px #979797;\n      }\n    }\n  }\n  .heading-mobile  {\n    @include layout-container();\n    display: none;\n    @include oGridRespondTo($until: M) {\n      display: block;\n    }\n\n  }\n\n}\n\n.content-template {\n  .page-heading-container {\n    H1 {\n      font-size: 20px;\n    }\n    .content-wrapper {\n      @include content-text();\n      a {\n        @include oTypographyLink;\n        color:  oColorsGetPaletteColor(\"org-b2c-dark\");\n        border-color: oColorsGetPaletteColor(\"org-b2c-dark\");\n      }\n    }\n  }    \n}\n\n.category-template, .subcategory-template, .contact-template{\n  .heading {\n    > div{\n      div.title-container {\n        @include oGridColspan((default: hide, S:hide, M: 6));\n      }\n      div.chat-container {\n        @include oGridColspan((default: 12, S:12, M: 6));\n      }\n    } \n  }\n}\n\n.category-template, .subcategory-template, .content-template, .contact-template, .search-template {\n\n  .content {\n\n    @include layout-container();\n\n    hr {\n      padding:0;\n      margin:0;\n      border:none;\n      border-top: solid 1px #979797;\n      @include oGridRespondTo($until: M) {\n        border-top: none;\n      }\n    }\n    .back-to-top-container {\n      border-top: none;\n    }\n  }\n}\n\n.category-template {\n  ul.category {\n    @extend .list-2-column;\n\n    padding-left: 0;\n    margin-top: 22px;\n    @include oGridRespondTo($until: M) {\n      margin-top: 16px;\n    }\n\n    li {\n      list-style: none;      \n      a {\n        @include MetricWebRegular();\n        color:oColorsGetPaletteColor(\"grey-tint5\");\n        text-decoration: none;\n        font-size:26px;\n        border-bottom: 1px dotted oColorsGetPaletteColor(\"pink\");\n        &:hover {\n          text-decoration: none;\n          border-bottom: 1px dotted oColorsGetPaletteColor(\"grey-tint5\");\n        }\n      }\n      ul.children {\n        margin:0 0 20px 0;\n        padding: 0;\n        @extend .list-li-caret;\n      }\n    }\n\n    li.page_item_has_children {\n      a {\n        text-transform: uppercase;\n        span.caret {\n          display: none;\n        }\n      }\n    }\n\n  }\n}\n\n.subcategory-template {\n  ul.category {\n    margin:20px 0 20px 0;\n    padding: 0;\n    @extend .list-li-caret;\n  }\n}\n\n.content-template, .contact-template {\n  .content {\n    @include content-text();\n    a {\n      @include oTypographyLink;\n      color:  oColorsGetPaletteColor(\"org-b2c-dark\");\n      border-color: oColorsGetPaletteColor(\"org-b2c-dark\");\n    }\n    h2.o-typography-subhead--crosshead {\n      @include MetricWebRegular();\n\n      border-bottom: none;\n      border-top: 1px solid #979797;\n      font-size:26px;\n      color:#4a4a4a;\n      margin-top: 0;\n      margin-bottom: 0;\n      padding-top: 28px;\n    }\n\n    .related-question-container {\n      @include oGridContainer();\n      @include oGridRespondTo($until: M) {\n        padding-left: 0;\n        padding-right: 0;\n      }    \n      @include oGridRespondTo($from: M) {\n        padding-left: 0;\n        padding-right: 0;\n      }    \n      > div {\n        @include oGridRow();\n        div {\n          @include oGridColspan((default: 12, S:12, M: 8));\n        }\n      }\n\n    }\n    ul.related-question {\n      margin:20px 0 20px 0;\n      padding: 0;\n      @extend .list-li-caret;\n    }\n\n    .contact-list {\n      border: none;\n      @include layout-container();\n      padding: 0;\n      @include oGridRespondTo($from: S) {\n        padding: 0;\n      }\n\n      > div {\n        @include oGridRow();\n        > div {\n          @include oGridColspan((default: 12, S:12, M: 6));\n        }\n      }\n      ul {\n        margin: 0;\n        padding: 0;\n        li {\n          list-style: none;\n          padding: 8px 0;\n        }\n      }\n      h2 {\n        @include MetricWebSemiBold();\n        font-size: 18px;\n      }\n      .tel-desktop {\n        display: inline-block;\n      }\n      .tel-mobile {\n        display: none;\n      }\n      @include oGridRespondTo($until: M) {\n        .tel-desktop {\n          display: none;\n        }\n        .tel-mobile {\n          display: inline-block;\n        }\n      }\n    }\n  }\n}\n\n.contact-template {\n  .feedback-banner {\n    @include layout-container();\n    margin-top: 30px;\n    > div {\n      @include layout-container();\n      padding: 0 !important;\n      background:#f9d9d2;\n      > div {\n        @include oGridRow();\n        background:#f9d9d2;\n        padding: 0;\n        div.msg {\n          @include oGridColspan((default: 12, S:12, M: 8));\n        }\n        div.action {\n          @include oGridColspan((default: 12, S:12, M: 4));\n        }\n      }\n    }\n    div.msg, div.action {\n      padding: 10px !important;\n      @include oGridRespondTo($until: M) {\n        padding: 10px !important;\n        padding-top: 0 !important;\n      }\n    }\n    div.msg {\n      h4, p {\n        padding: 0;\n        margin: 0;\n      }\n      h4 {\n        @include MetricWebSemiBold();\n        color: oColorsGetPaletteColor(\"grey-tint5\");\n        font-size: 20px;\n        margin-bottom: 10px;\n      }\n      p {\n        @include MetricWebRegular();\n        line-height: 24px;\n        font-size: 18px;\n      }\n      @include oGridRespondTo($until: M) {\n        padding: 10px !important;\n      }\n    }\n    div.action {\n      text-align: right;\n      a {\n        margin-top: 10px;\n        margin-right: 10px;\n      }\n\n      @include oGridRespondTo($until: M) {\n        text-align: left;\n      }\n    }\n  }\n}\n\n.search-template {\n  .content-wrapper {\n    color:oColorsGetPaletteColor(\"grey-tint5\");\n    h2 {\n      @include MetricWebSemiBold();\n      font-size: 20px;\n      margin-bottom: 5px;\n      margin-top: 25px;\n\n      @include oGridRespondTo($until: M) {\n        font-size: 18px;\n      }\n      a {\n        @include MetricWebSemiBold();\n        color:oColorsGetPaletteColor(\"org-b2c-dark\");\n        text-decoration: none;\n        border-bottom: 1px dotted oColorsGetPaletteColor(\"org-b2c-dark\");\n      &:hover {\n          text-decoration: none;\n          border-bottom: none;\n        }\n      }\n    }\n    p {\n      @include content-text();\n    }\n  }\n  .no-result {\n    @include layout-container();\n    .icon {\n      text-align: center;\n      background-image: url(\"images/search.png\");\n      background-repeat: no-repeat;\n      background-position: top center;\n      margin-top: 25px;\n      padding-top: 100px;\n      H1 {\n       @include MetricWebSemiBold();\n        font-size: 40px;\n        margin-bottom: 0;\n        @include oGridRespondTo($until: M) {\n          font-size: 32px;\n        }\n      }\n      H2 {\n        margin-top: 15px;\n\n      }\n    }\n  }\n}\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Path to the assets\n///\n/// @type String\n$o-fonts-path: '//origami-build.ft.com/v2/files/o-fonts-assets@1.3.0/' !default;\n\n/// Silent mode\n///\n/// @type Bool\n$o-fonts-is-silent: true !default;\n\n/// Font families\n///\n/// @type Map\n$o-fonts-families: (\n\tBentonSans: (\n\t\tfont-family: 'BentonSans, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tMillerDisplay: (\n\t\tfont-family: 'MillerDisplay, Georgia, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: \"black\", style: normal)\n\t\t)\n\t),\n\tMetricWeb: (\n\t\tfont-family: 'MetricWeb, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: thin, style: normal),\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic),\n\t\t\t(weight: medium, style: normal),\n\t\t\t(weight: semibold, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: bold, style: italic),\n\t\t)\n\t),\n\tFinancierDisplayWeb: (\n\t\tfont-family: 'FinancierDisplayWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: medium, style: italic),\n\t\t\t(weight: semibold, style: italic),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tFinancierTextWeb: (\n\t\tfont-family: 'FinancierTextWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic)\n\t\t)\n\t)\n) !default;\n\n/// Human-readable Font-weights\n///\n/// @access private\n///\n/// @type Map\n$_o-fonts-weights: (\n\t'thin':       100,\n\t'light':      200,\n\t'regular':    400,\n\t'normal':     400,\n\t'medium':     500,\n\t'semibold':   600,\n\t'bold':       700,\n\t'black':      800,\n) !default;\n\n/// Map of families and styles which have already been included\n/// Used to avoid declarations from being multiple times in the CSS output\n///\n/// @access private\n$_o-fonts-families-included: () !default;\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Check if a font variant exists for a family\n///\n/// @param {String} family - one of $o-fonts-families\n/// @param {String} weight\n/// @param {String} style\n///\n/// @access private\n///\n/// @return {Bool}\n@function _oFontsVariantExists($family, $weight, $style) {\n\t$font-properties: map-get($o-fonts-families, $family);\n\t$font-variants: map-get($font-properties, variants);\n\n\t@each $variant in $font-variants {\n\t\t// Check if this weight and style variant exists for this family\n\t\t// Known issue with LibSass 3.0.2 - https://github.com/sass/libsass/issues/741\n\t\t@if (map-get($variant, weight) == $weight and map-get($variant, style) == $style) {\n\t\t\t@return true;\n\t\t}\n\t}\n\t@return false;\n}\n\n/// Capitalise first letter of $string\n///\n/// @param {String} $string - string to update\n///\n/// @return {String}\n@function _oFontsStringCapitalise($string) {\n\t$string: $string + unquote(''); // Make sure $string has a type of String\n\t$first-letter: to-upper-case(str-slice($string, 0, 1));\n\t$rest-of-string: str-slice($string, 2);\n\n\t@return $first-letter + $rest-of-string;\n}\n\n/// Get a font-family stack with the appropriate fallbacks\n///\n/// @param {String} family\n///\n/// @return {String} - font-stack\n///\n/// @example scss\n/// font-family: oFontsGetFontFamilyWithFallbacks(FinancierDisplayWeb);\n@function oFontsGetFontFamilyWithFallbacks($family) {\n\t@if $family == 'Clarion' {\n\t\t@warn \"Clarion has been removed, use Georgia instead\";\n\t\t@return $o-fonts-serif;\n\t}\n\t@if map-has-key($o-fonts-families, $family) {\n\t\t$properties: map-get($o-fonts-families, $family);\n\t\t@return unquote(map-get($properties, font-family));\n\t}\n\t@warn 'Font #{$family} not found. Must be one of $o-fonts-families.';\n\t@return inherit;\n}\n\n/// Path to a font asset\n///\n/// @param {String} $asset\n///\n/// @return {String} - Path to the font asset, without the file extension\n@function oFontsUseAsset($asset) {\n\t@return $o-fonts-path + $asset;\n}\n\n/// Machine-readable CSS font-weight.\n///\n/// @param {String} $keyword - Human-readable keyword, one of $_o-fonts-weights\n///\n/// @example scss\n/// font-weight: oFontsWeight(lighter);\n///\n/// @return {Number} - CSS font-weight\n@function oFontsWeight($keyword) {\n\t@if map-has-key($_o-fonts-weights, $keyword) {\n\t\t@return map-get($_o-fonts-weights, $keyword);\n\t} @else {\n\t\t@warn 'Keyword \"#{$keyword}\" not found. Must be one of $_o-fonts-weights.';\n\t}\n}\n","////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n$o-colors-palette: () !default;\n\n/// Colour palette\n///\n/// These are the colours that make up the FT palette.\n/// We don't use these colours directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a colour name and a colour code,\n/// and is finished with a comma:\n///\n/// \t<colour name>:   <colour code>,\n///\n/// The colour name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the colour name and the colour code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @link http://next.ft.com/__styleguide/design-primitives#palette\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// Non-colour CSS values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// Primary Palette\n\t'pink':                  #fff1e0,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\t'blue':                  #2e6e9e,\n\t'dark-blue':             #275e86,\n\t'claret':                #9e2f50,\n\t'orange':                #d66d06,\n\n\t'grey-tint1':            #b0b0b0,\n\t'grey-tint2':            #999999,\n\t'grey-tint3':            #777777,\n\t'grey-tint4':            #505050,\n\t'grey-tint5':            #333333,\n\n\t'pink-tint1':            #f6e9d8,\n\t'pink-tint2':            #e9decf,\n\t'pink-tint3':            #cec6b9,\n\t'pink-tint4':            #a7a59b,\n\t'pink-tint5':            #74736c,\n\n\t// Colours\n\t'red':                   #cc0000,\n\t'green':                 #458b00,\n\n\t// Highlight tints\n\t'orange-tint1':          #eda45e,\n\t'brown-tint1':           #94826b,\n\t'yellow-tint1':          #eed485,\n\t'green-tint1':           #a6a471,\n\t'bluegreen-tint1':       #819e9a,\n\t'silver-tint1':          #c1b8b4,\n\n\t'purple-tint1':          #936971,\n\t'purple-tint2':          #737e7e,\n\n\t'red-tint1':             #b1493f,\n\t'red-tint2':             #c36256,\n\t'red-tint3':             #d17c70,\n\t'red-tint4':             #df9c92,\n\t'red-tint5':             #ebbcb3,\n\n\t'blue-tint1':            #598caf,\n\t'blue-tint2':            #75a5c2,\n\t'blue-tint3':            #8ab5cd,\n\t'blue-tint4':            #a9cadc,\n\t'blue-tint5':            #bcd7e5,\n\n\t// Sections colours\n\t'section-purple':        #92288f,\n\t'section-light-purple':  #ebcaec,\n\t'section-blue':          #0e6dcc,\n\t'section-light-blue':    #c5d4e8,\n\t'section-green':         #09a25c,\n\t'section-light-green':   #a1dbb2,\n\t'section-red':           #cc0033,\n\n\t// Next\n\t// http://next.ft.com/__styleguide/design-primitives#palette\n\t'warm-1':                #ffe9d7,\n\t'warm-2':                #f6e9d8,\n\t'warm-3':                #cec6b9,\n\t'warm-4':                #1d1d1d,\n\t'warm-5':                #fdf8f2,\n\t'warm-6':                #8b572a,\n\n\t'cold-1':                #505050,\n\t'cold-2':                #333333,\n\t'cold-3':                #1d1d1d,\n\n\t'blue-1':                #002758,\n\t'blue-2':                #eeeeee,\n\n\t'purple-1':              #410057,\n\t'purple-2':              #f3dee3,\n\n\t'teal-1':                #27757b,\n\t'teal-2':                #2bbbbf,\n\n\t'claret-1':              #9e2f50,\n\t'claret-2':              #ff7f8a,\n\t'claret-inverse':        #4f1828,\n\n\t// FT organisation colours\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n\n\t'org-b2b':               #f6801a,\n\t'org-b2b-dark':          #c85f04,\n\t'org-b2b-light':         #f29d53,\n\n), $o-colors-palette);\n","////\n/// @group o-grid\n/// @link http://registry.origami.ft.com/components/o-grid\n////\n\n/// Add a layout\n///\n/// @example scss\n///  @include oGridAddLayout($layout-name: P, $layout-width: 600px);\n///  @include oGridAddLayout($layout-name: XXL, $layout-width: 1600px, $gutter-width: 30px);\n///\n/// @param {String} $layout-name - Name of the layout (e.g. S)\n/// @param {Number} $layout-width - Layout width in px\n/// @param {Number} $gutter-width [null] - Gutter width in px\n@mixin oGridAddLayout($layout-name, $layout-width, $gutter-width: null) {\n\t$temp-layouts: ();\n\t$temp-gutters: (default: oGridGutter());\n\n\t// Add the new layout in the correct position:\n\t// (we want $o-grid-layouts and $o-grid-gutters to be ordered from the smallest to the largest layout)\n\t@for $index from 1 through length($o-grid-layouts) {\n\t\t$previous-layout-width: if($index == 1, 0, map-get($o-grid-layouts, nth($_o-grid-layout-names, $index - 1)));\n\t\t$current-layout-name: nth($_o-grid-layout-names, $index);\n\t\t$current-layout-width: map-get($o-grid-layouts, $current-layout-name);\n\n\t\t$current-gutter-width: map-get($o-grid-gutters, $current-layout-name);\n\n\t\t@if not ($previous-layout-width > $layout-width or $current-layout-width < $layout-width) {\n\t\t\t$temp-layouts: map-merge($temp-layouts, ($layout-name: $layout-width));\n\t\t\t$temp-gutters: map-merge($temp-gutters, ($layout-name: $gutter-width));\n\t\t}\n\n\t\t$temp-layouts: map-merge($temp-layouts, ($current-layout-name: $current-layout-width));\n\n\t\t@if $current-gutter-width {\n\t\t\t$temp-gutters: map-merge($temp-gutters, ($current-layout-name: $current-gutter-width));\n\t\t}\n\t}\n\t$o-grid-layouts: $temp-layouts !global;\n\t$_o-grid-layout-names: map-keys($o-grid-layouts) !global;\n\n\t@if $gutter-width {\n\t\t$o-grid-gutters: $temp-gutters !global;\n\t}\n\n\t$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1)) !global;\n}\n\n/// Get the gutter of a layout\n///\n/// @param {String|null|Boolean} $layout-name - One of $o-grid-layouts\n@function oGridGutter($layout-name: default) {\n\t// This layout was assigned a gutter directly\n\t@if map-get($o-grid-gutters, $layout-name) {\n\t\t@return map-get($o-grid-gutters, $layout-name);\n\t}\n\n\t// Checking the position of the layout in the list of layouts\n\t$layout-index: index($_o-grid-layout-names, $layout-name);\n\n\t// The first layout (S) should get the default gutter\n\t@if $layout-index == 1 {\n\t\t@return oGridGutter();\n\t}\n\n\t// No gutter found for this layout, let's try again with a smaller one\n\t$layout: nth($_o-grid-layout-names, $layout-index - 1);\n\t@return oGridGutter($layout);\n}\n\n/// Get the max width of a layout\n///\n/// @example\n///  .my-large-container { width: oGridGetMaxWidthForLayout(L); }\n///\n/// @param {String} $layout-name - one of $o-grid-layouts\n/// @param {String} $grid-mode [$o-grid-mode]\n@function oGridGetMaxWidthForLayout($layout-name, $grid-mode: $o-grid-mode) {\n\t$grid-is-responsive: $grid-mode != 'fixed';\n\n\t$index: index($_o-grid-layout-names, $layout-name);\n\n\t// Largest layout: return its width directly\n\t@if $index == length($_o-grid-layout-names) {\n\t\t@return $_o-grid-max-width;\n\t}\n\n\t// Smaller layouts:\n\t@if $grid-is-responsive {\n\t\t// - The grid is responsive (fluid or snappy):\n\t\t//   return the next larger layout width\n\t\t$next-layout: nth($_o-grid-layout-names, $index + 1);\n\t\t@return map-get($o-grid-layouts, $next-layout);\n\t} @else {\n\t\t// - The grid is fixed, return the current layout width\n\t\t@return map-get($o-grid-layouts, $layout-name);\n\t}\n}\n\n/// % width of an element in the grid\n///\n/// @example\n///  .one-half   { width: oGridColspan(1/2); }      // 50%\n///  .other-half { width: oGridColspan(one-half); } // 50%\n///  .sidebar    { width: oGridColspan(5); }        // 41.66667%\n///  .two-thirds { width: oGridColspan(2/3); }      // 66.66667%\n///  .4-out-of-6 { width: oGridColspan(4, 6); }     // 66.66667%\n///\n/// @param {Number | String} $span - Number of columns the element spans over\n/// @param {Number} $total-cols [$o-grid-columns] - Number of columns in the grid\n///\n/// @returns {Number} width of the element in the grid, in percents\n@function oGridColspan($span, $total-cols: $o-grid-columns) {\n\t// Match the HTML helper API with human-friendly numbers\n\t@if $span == 'one-half'       { $span: 1/2; }\n\t@if $span == 'one-quarter'    { $span: 1/4; }\n\t@if $span == 'one-third'      { $span: 1/3; }\n\t@if $span == 'two-thirds'     { $span: 2/3; }\n\t@if $span == 'three-quarters' { $span: 3/4; }\n\n\t@if $span == 'full-width' {\n\t\t@return 100%;\n\t} @else {\n\t\t@if $span >= 1 {\n\t\t\t// A number of columns is supplied: converting it into a fraction\n\t\t\t// of the total number of columns\n\t\t\t@return percentage($span / $total-cols);\n\t\t} @else {\n\t\t\t// A fraction (1/2) or a number (0.5) is supplied:\n\t\t\t// converting it into a percentage\n\t\t\t@return percentage($span);\n\t\t}\n\t}\n}\n\n/// Apply styles at a given layout size\n/// Wrapper for the Sass MQ mq() mixin\n///\n/// @link https://git.io/sass-mq Sass MQ documentation\n///\n/// @example\n///  // Turn the color of an element red at medium layout size and up\n///  @include oGridRespondTo(M) {\n///  \telement {\n///  \t\tcolor: red;\n///  \t}\n///  }\n///  // Turn the color of an element blue until medium layout\n///  element {\n///  \t@include oGridRespondTo($until: M) {\n///  \t\tcolor: blue;\n///  \t}\n///  }\n///  // Turn the color of an element green from small layout until medium layout\n///  element {\n///  \t@include oGridRespondTo($from: S, $until: M) {\n///  \t\tcolor: green;\n///  \t}\n///  }\n///\n/// @param {String} from - one of $o-grid-layouts\n/// @param {String} until - one of $o-grid-layouts\n@mixin oGridRespondTo($from: false, $until: false) {\n\t$grid-is-responsive: $o-grid-mode != 'fixed';\n\n\t$original-scope: $_o-grid-scope;\n\t$_o-grid-scope: 'respondTo' !global;\n\n\t@include mq(\n\t\t$from: $from,\n\t\t$until: $until,\n\t\t$responsive: $grid-is-responsive,\n\t\t$breakpoints: $o-grid-layouts,\n\t\t$static-breakpoint: $o-grid-fixed-layout\n\t) {\n\t\t@content;\n\t}\n\n\t// Restore previously set scope\n\t$_o-grid-scope: $original-scope !global;\n}\n\n/// Target styles at Internet Explorer 8 only\n@mixin oGridTargetIE8 {\n\t// Users may target styles at IE8, but only in the global scope,\n\t// but it shouldn't output any code inside of a oGridRespondTo call\n\t@if 'global' == $_o-grid-scope {\n\t\t@if 'inline' == $o-grid-ie8-rules {\n\t\t\t@media \\0screen {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t\t@if 'only' == $o-grid-ie8-rules {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n/// Target styles at modern browsers that support @media queries properly\n@mixin oGridTargetModernBrowsers {\n\t/// Output code as-is if called inside of a media query,\n\t/// since it will target modern browsers already\n\t@if $_o-grid-scope == 'respondTo' {\n\t\t@content;\n\t} @else {\n\t\t@if not ('only' == $o-grid-ie8-rules) {\n\t\t\t@media only screen {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/// Human friendly names for portions and centering:\n///\n/// - hide\n/// - full-width\n/// - one-half\n/// - one-third\n/// - two-thirds\n/// - one-quarter\n/// - three-quarters\n/// - center\n/// - uncenter\n///\n/// @access private\n///\n/// @param {String} $layout-name [null]\n@mixin _oGridHumanFriendlyKeywords($layout-name: null) {\n\t[data-o-grid-colspan~=\"#{$layout-name}hide\"] {\n\t\tdisplay: none;\n\t}\n\n\t// Center and un-center\n\t[data-o-grid-colspan~=\"#{$layout-name}center\"] {\n\t\t@include oGridCenter;\n\t}\n\t// Since writing [data-o-grid-colspan~=\"uncenter\"] wouldn't make much sense\n\t// we only allow \"uncenter\" combined with a layout (e.g. XLuncenter)\n\t@if $layout-name != null {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}uncenter\"] {\n\t\t\t@include oGridUncenter;\n\t\t}\n\t}\n\n\t// Portions\n\t@each $human-friendly-name in (full-width, one-half, one-third, two-thirds, one-quarter, three-quarters) {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}#{$human-friendly-name}\"] {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Define width in %\n\t\t\t@include _oGridFixSafariWrap($human-friendly-name);\n\t\t\tmin-width: oGridColspan($human-friendly-name);\n\t\t\tmax-width: oGridColspan($human-friendly-name);\n\t\t\twidth: oGridColspan($human-friendly-name);\n\t\t}\n\t}\n}\n\n/// Shuffle columns around using pull, push and offset\n///\n/// @access private\n///\n/// @param {String} $layout-name [null]\n@mixin _oGridShuffleColumns($layout-name: null) {\n\t@for $colspan from 0 through ($o-grid-columns - 1) {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}push#{$colspan}\"] {\n\t\t\t@include oGridPush($colspan);\n\t\t}\n\t\t[data-o-grid-colspan~=\"#{$layout-name}pull#{$colspan}\"] {\n\t\t\t@include oGridPull($colspan);\n\t\t}\n\t\t[data-o-grid-colspan~=\"#{$layout-name}offset#{$colspan}\"] {\n\t\t\t@include oGridOffset($colspan);\n\t\t}\n\t}\n}\n\n/// Base column styles and responsive layout width\n///\n/// @example scss Block has column styles\n///   el { @include oGridColspan(); }\n///\n/// @example scss 4-column wide block\n///   el { @include oGridColspan(4); }\n///\n/// @example scss Half-width block\n///   el { @include oGridColspan(1/2); }\n///\n/// @example scss Block is full-width by default, 8-column wide on Medium layouts and hidden on Large layouts\n///   el { @include oGridColspan((default: 12, M: 8, L: hide)); }\n///\n/// @param {Number | Map} $span [null]\n@mixin oGridColspan($span: null, $width-only: false) {\n\t@if not $width-only {\n\t\tposition: relative; // Required for push and pull\n\t\tfloat: left;\n\t\tbox-sizing: border-box;\n\t\tflex: 1 1 0%;\n\n\t\t@include oGridTargetIE8 {\n\t\t\t// scss-lint:disable ImportantRule\n\t\t\tmin-width: 0 !important;\n\t\t}\n\n\t\t@if $o-grid-mode == 'fixed' {\n\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t} @else {\n\t\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t\t@if $layout-name == 'default' {\n\t\t\t\t\tpadding-left: oGridGutter();\n\t\t\t\t} @else {\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\tpadding-left: oGridGutter($layout-name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@include oGridTargetIE8 {\n\t\t\t\t// Output grid modifiers for the fixed layout displayed by IE8\n\t\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\t}\n\t\t}\n\t}\n\t@if $span {\n\t\t@include _oGridColumnWidth($span);\n\t}\n}\n\n/// Cross browser column widths across layouts\n///\n/// @example scss\n///   el { @include _oGridColumnWidth(4); }\n///   el { @include _oGridColumnWidth(1/2); }\n///   el { @include _oGridColumnWidth(hide); }\n///   el { @include _oGridColumnWidth((default: 12, M: 8, L: hide)); }\n///\n/// @param {Number | Map} $span\n@mixin _oGridColumnWidth($span) {\n\t// Special case: the column is hidden by default\n\t@if $span == 'hide' {\n\t\tdisplay: none;\n\t} @else {\n\t\t// $span is a number or a keyword, so we're outputting the default width for that column\n\t\t@if type-of($span) == number or type-of($span) == string {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Define width in %\n\t\t\t@include _oGridFixSafariWrap($span);\n\t\t\tmin-width: oGridColspan($span);\n\t\t\tmax-width: oGridColspan($span);\n\n\t\t\t// For IE8\n\t\t\twidth: oGridColspan($span);\n\t\t}\n\t}\n\n\t// $span is a map, we're looping through all of the layouts\n\t@if type-of($span) == map {\n\t\t@each $layout-name, $layout-span in $span {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\t@include _oGridColumnWidth($layout-span);\n\t\t\t} @else {\n\t\t\t\t@if $layout-span == 'hide' {\n\t\t\t\t\t// Target IE8 only if the layout is smaller than the maximum width of the fixed layout\n\t\t\t\t\t@if index($_o-grid-layout-names, $layout-name) <= index($_o-grid-layout-names, $o-grid-fixed-layout) {\n\t\t\t\t\t\t@include oGridTargetIE8 {\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t\t\t\t// Restore visibility from `display: none`\n\t\t\t\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\t\t\t\tdisplay: block;\n\n\t\t\t\t\t\t// Define width in %\n\t\t\t\t\t\t@include _oGridFixSafariWrap($layout-span);\n\t\t\t\t\t\tmin-width: oGridColspan($layout-span);\n\t\t\t\t\t\tmax-width: oGridColspan($layout-span);\n\t\t\t\t\t}\n\t\t\t\t\t// Target IE8 only if the layout is smaller than the maximum width of the fixed layout\n\t\t\t\t\t@if index($_o-grid-layout-names, $layout-name) <= index($_o-grid-layout-names, $o-grid-fixed-layout) {\n\t\t\t\t\t\t@include oGridTargetIE8 {\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t\twidth: oGridColspan($layout-span);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Grid container\n///\n/// @param {String} $grid-mode [$o-grid-mode]\n/// @param {Boolean} $bleed [false]\n@mixin oGridContainer($grid-mode: $o-grid-mode, $bleed: false) {\n\tposition: relative;\n\tbox-sizing: border-box;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmin-width: $o-grid-min-width;\n\t// Older browsers get a fixed-width layout\n\tmax-width: oGridGetMaxWidthForLayout($o-grid-fixed-layout);\n\n\t@if $bleed {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n\n\t@if $grid-mode == 'fixed' {\n\t\t// If the grid isn't fluid, we set it to a certain width\n\t\twidth: oGridGetMaxWidthForLayout($o-grid-fixed-layout, $grid-mode: 'fixed');\n\t\t@if not $bleed {\n\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\tpadding-right: oGridGutter($o-grid-fixed-layout);\n\t\t}\n\t} @else {\n\t\tmax-width: $_o-grid-max-width;\n\n\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\t@if not $bleed {\n\t\t\t\t\tpadding-left: oGridGutter();\n\t\t\t\t\tpadding-right: oGridGutter();\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t@if not $bleed {\n\t\t\t\t\t\tpadding-left: oGridGutter($layout-name);\n\t\t\t\t\t\tpadding-right: oGridGutter($layout-name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@each $layout-name in $_o-grid-layout-names {\n\t\t\t@if index($_o-grid-layout-names, $layout-name) >= index($_o-grid-layout-names, $o-grid-start-snappy-mode-at) {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t// If the grid mode is snappy, all rows should be snappy\n\t\t\t\t\t@if $grid-mode == 'snappy' {\n\t\t\t\t\t\tmax-width: map-get($o-grid-layouts, $layout-name);\n\t\t\t\t\t}\n\t\t\t\t\t@if $grid-mode == 'fluid' {\n\t\t\t\t\t\t// If the grid mode is fluid, then use a class to make a row or a set of rows snappy\n\t\t\t\t\t\t.o-grid-snappy &,\n\t\t\t\t\t\t&--snappy {\n\t\t\t\t\t\t\tmax-width: map-get($o-grid-layouts, $layout-name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Serve a fixed-width layout to IE8\n\t\t@include oGridTargetIE8 {\n\t\t\t@if not $bleed {\n\t\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\t\tpadding-right: oGridGutter($o-grid-fixed-layout);\n\t\t\t}\n\t\t\twidth: oGridGetMaxWidthForLayout($o-grid-fixed-layout, $grid-mode: 'fixed');\n\t\t}\n\t}\n}\n\n/// Base row styles\n///\n/// @param {String} $grid-mode [$o-grid-mode]\n@mixin oGridRow {\n\tclear: both;\n\tflex-wrap: wrap; // Note that this breaks in old Firefox\n\tdisplay: flex;\n\n\t@media print {\n\t\tdisplay: inherit;\n\t}\n\n\t@if $o-grid-mode == 'fixed' {\n\t\tmargin-left: -1 * oGridGutter($o-grid-fixed-layout);\n\t} @else {\n\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\tmargin-left: -1 * oGridGutter();\n\t\t\t} @else {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\tmargin-left: -1 * oGridGutter($layout-name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridTargetIE8 {\n\t\t\tmargin-left: -1 * oGridGutter($o-grid-fixed-layout);\n\t\t}\n\t}\n\n\t// Clearfix for IE9 and below\n\tzoom: 1;\n\n\t&:before,\n\t&:after {\n\t\tcontent: '';\n\t\tdisplay: table;\n\t\tdisplay: flex;\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n}\n\n/// Remove gutters from columns in a row\n///\n/// @param {string} column child selector\n@mixin oGridRowCompact($column-selector: \"[o-grid-colspan]\") {\n\tmargin-left: 0;\n\n\t> #{unquote($column-selector)} {\n\t\tpadding-left: 0;\n\t}\n}\n\n/// Remove row styles\n@mixin oGridResetRow {\n\tclear: none;\n\tdisplay: block;\n\tflex-wrap: nowrap;\n\tmargin-left: 0;\n\n\t&:before,\n\t&:after {\n\t\tdisplay: none;\n\t}\n}\n\n/// Center column\n@mixin oGridCenter {\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tfloat: none;\n}\n\n/// Uncenter column\n@mixin oGridUncenter {\n\tmargin-left: 0;\n\tmargin-right: 0;\n\tfloat: left;\n}\n\n/// Remove column styles\n@mixin oGridResetColumn {\n\tpadding-left: 0;\n\tpadding-right: 0;\n\tfloat: none;\n\twidth: auto;\n\tmin-width: 0;\n\tmax-width: none;\n\tflex: none;\n}\n\n/// Reorder visually: pull\n///\n/// @param {Number} $columns\n@mixin oGridPull($columns) {\n\tright: oGridColspan($columns);\n\tleft: auto;\n}\n\n/// Reorder visually: push\n///\n/// @param {Number} $columns\n@mixin oGridPush($columns) {\n\tleft: oGridColspan($columns);\n\tright: auto;\n}\n\n/// Offset: add space before a column\n///\n/// @param {Number} $columns\n@mixin oGridOffset($columns) {\n\tmargin-left: oGridColspan($columns);\n}\n\n/// Width and gutter removal modifiers for a given layout.\n///\n/// @output\n///  [data-o-grid-colspan~=\"S1\"] { width: %; }\n///\n/// @access private\n///\n/// @param {String} $layout-name - One of $o-grid-layouts\n@mixin _oGridModifiersForLayout($layout-name) {\n\t@if $o-grid-human-friendly-selectors == true {\n\t\t@include _oGridHumanFriendlyKeywords($layout-name);\n\t}\n\n\t@if $o-grid-shuffle-selectors == true {\n\t\t@include _oGridShuffleColumns($layout-name);\n\t}\n\n\t[data-o-grid-colspan~=\"#{$layout-name}0\"] {\n\t\tdisplay: none;\n\t}\n\n\t@for $colspan from 1 through $o-grid-columns {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}#{$colspan}\"] {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Apply width in %\n\t\t\t@include _oGridFixSafariWrap($colspan);\n\t\t\tmin-width: oGridColspan($colspan);\n\t\t\tmax-width: oGridColspan($colspan);\n\t\t\twidth: oGridColspan($colspan);\n\t\t}\n\t}\n}\n\n/// Fix a bug in Safari where items wouldn't wrap properly\n/// @link https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrapping-flex-items\n@mixin _oGridFixSafariWrap($args...) {\n\tflex-basis: oGridColspan($args...);\n}\n\n/// Generate the grid with helper classes for:\n/// - older browsers (no columns, @media query support)\n/// - IE 8 (fixed layout, with columns)\n/// - modern browsers (fluid layout, with columns)\n@mixin oGridGenerate {\n\t// Basic layout styles\n\t.o-grid-container {\n\t\t@include oGridContainer($o-grid-mode);\n\t}\n\t.o-grid-container--bleed {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n\t.o-grid-row {\n\t\t@include oGridRow;\n\t}\n\t[data-o-grid-colspan] {\n\t\t@include oGridColspan();\n\t}\n\n\n\t[data-o-grid-colspan~=\"0\"] {\n\t\tdisplay: none;\n\t}\n\t@for $colspan from 1 through $o-grid-columns {\n\t\t[data-o-grid-colspan~=\"#{$colspan}\"] {\n\t\t\t@include oGridColspan($colspan, $width-only: true);\n\t\t}\n\t}\n\n\t// Compact, gutterless row of columns\n\t.o-grid-row--compact {\n\t\tmargin-left: 0;\n\n\t\t> [data-o-grid-colspan] {\n\t\t\tpadding-left: 0;\n\t\t}\n\t}\n\n\t@if $o-grid-human-friendly-selectors == true {\n\t\t// one-half, one-third, three-quarters, center, uncenter…\n\t\t@include _oGridHumanFriendlyKeywords;\n\t}\n\n\t@if $o-grid-shuffle-selectors == true {\n\t\t// pull, push, offset\n\t\t@include _oGridShuffleColumns;\n\t}\n\n\t// For IE 8, output grid helper classes and data- attributes\n\t// for the layout defined in $o-grid-fixed-layout\n\t@include oGridTargetIE8 {\n\t\t// Output grid modifiers for layouts up to the fixed layout displayed by IE8\n\t\t$last-layout-index: index($_o-grid-layout-names, $o-grid-fixed-layout);\n\t\t@for $index from 1 through $last-layout-index {\n\t\t\t@include _oGridModifiersForLayout(nth($_o-grid-layout-names, $index));\n\t\t}\n\t}\n\n\t// In browsers that support @media queries,\n\t// output grid helper classes and data- attributes for all layouts\n\t@each $layout-name in $_o-grid-layout-names {\n\t\t@include oGridRespondTo($layout-name) {\n\t\t\t@include _oGridModifiersForLayout($layout-name);\n\t\t}\n\t}\n}\n","////\n/// @group o-grid\n/// @link http://registry.origami.ft.com/components/o-grid\n////\n\n// ----------------------------------------------------------------------------\n// Responsive behaviour configuration\n// ----------------------------------------------------------------------------\n\n/// Silent mode\n///\n/// @type Bool\n///\n/// @link http://origami.ft.com/docs/syntax/scss/#silent-styles \"Silent\" styles in Origami's documentation\n$o-grid-is-silent: true !default;\n\n\n/// Offset, push and pull selectors\n///\n/// @type Bool\n///\n/// Toggle outputting offset, push and pull selectors\n$o-grid-shuffle-selectors: true !default;\n\n/// Human-friendly selectors\n///\n/// @type Bool\n///\n/// Toggle outputting offset, push and pull selectors\n$o-grid-human-friendly-selectors: true !default;\n\n\n/// Grid mode\n/// - fluid: full width up to the largest layout's width\n/// - snappy: fluid width until the layout defined in $o-grid-start-snappy-mode-at (default: M),\n///           and then snaps into a larger fixed layout at each breakpoint\n/// - fixed: always fixed-width with the layout defined by $o-grid-fixed-layout (default: L)\n///\n/// @type String - one of fluid (default), snappy, fixed\n$o-grid-mode: 'fluid' !default;\n\n/// Layout to default to when the grid has a fixed width (not fluid)\n///\n/// @type String - One of $o-grid-layouts\n$o-grid-fixed-layout: 'L' !default;\n\n/// When the grid start snapping between fixed-width layouts\n/// in the case where a row has the `o-grid-row--snappy` class\n///\n/// @type String\n$o-grid-start-snappy-mode-at: 'M' !default;\n\n/// Show the currently active breakpoint and output loaded settings\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @type Bool\n$o-grid-debug-mode: false !default;\n\n/// Output IE 8-specific rules?\n/// - false: no IE8 support at all\n/// - 'only': serve code compatible with IE8 only\n/// - 'inline' (default): serve IE8 specific code alongside modern browsers code\n///\n/// @type Bool | String\n$o-grid-ie8-rules: 'inline' !default;\n\n\n// ----------------------------------------------------------------------------\n// Grid settings and dimensions\n// ----------------------------------------------------------------------------\n\n/// Number of columns\n///\n/// @type Number (unitless)\n$o-grid-columns: 12 !default;\n\n/// Minimum width, in pixels\n///\n/// @type Number\n$o-grid-min-width: 240px !default;\n\n/// Layouts\n///\n/// Each layout is calculated following a specific column width,\n/// in order to base breakpoints on the structure of the grid itself\n///\n/// @type Map\n$o-grid-layouts: (\n\tS:  490px,  // column-width: 30px, inner width: 470px\n\tM:  740px,  // column-width: 40px, inner width: 700px\n\tL:  980px,  // column-width: 60px, inner width: 940px\n\tXL: 1220px, // column-width: 80px, inner width: 1180px\n) !default;\n\n/// Layout names\n///\n/// @access private\n/// @type List\n$_o-grid-layout-names: map-keys($o-grid-layouts);\n\n/// Gutter sizes\n///\n/// @type Map\n$o-grid-gutters: (\n\tdefault: 10px,\n\tM:       20px,\n) !default;\n\n// If layouts have changed but gutters haven't,\n// prune non-existant layouts.\n@each $layout-name, $gutter-size in $o-grid-gutters {\n\t@if ($layout-name != 'default') and (not map-has-key($o-grid-layouts, $layout-name)) {\n\t\t$o-grid-gutters: map-remove($o-grid-gutters, $layout-name);\n\t}\n}\n\n/// Maximum grid width\n/// Defaults to the largest layout width\n///\n/// @access private\n/// @type Number\n$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1));\n\n// When snappy mode is enabled, force $_o-grid-max-width to the largest layout width\n// instead of the default $_o-grid-max-width\n@if $o-grid-mode == 'snappy' {\n\t$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1)) !global;\n}\n\n/// Current scope\n///\n/// @access private\n/// @type String\n$_o-grid-scope: 'global';\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\n/// @group o-icons\n/// @link http://registry.origami.ft.com/components/o-icons\n////\n\n/// Get an SVG icon with PNG fallback for ie6-8\n///\n/// @param {String} $icon-name - this should be a reference to an icon included in o-icons eg arrow-down\n/// @param {String} $color - this should be a hex colour value. Used to color the icon. We suggest using an o-colors an o-colors function.\n/// @param {String} $container-width - this is the width to set the icon containing element to. Defaults to 20px. This value is also used to request a PNG fallback of the right size from the image service.\n/// @param {String} $container-height - this is the height to set the icon containing element to. Defaults to null, and will use the value of $container-width\n/// @param {Bool} $apply-base-styles - defaults to true. If true, will output style rules for the container. If false will only output the background-image property\n/// @param {Bool} $apply-width-height - defaults to true. If true, will output the styles for the container width and height.\n/// @param {Integer} $iconset-version - defaults to 1. At present only 1 version of the icon set is available.\n\n@mixin oIconsGetIcon($icon-name, $color: null, $container-width: 128, $container-height: null, $apply-base-styles: true, $apply-width-height: true, $iconset-version: 1) {\n\n\t// Currently the only supported version of fticons is version 1.\n\t@if $iconset-version == 0 {\n\t\t@error \"Icon set version 0 is not supported with this version of o-icons. Please use version 1.\";\n\t} @else if $iconset-version > 1 {\n\t\t@error \"Icon set version #{$iconset-version} does not exist. Please use version 1.\";\n\t}\n\n\t$scheme: \"fticon-v#{$iconset-version}\";\n\n\t$service-url: $o-icons-service-base-url + \"/v1/images/raw/#{$scheme}:#{$icon-name}\";\n\t$query: \"?source=o-icons\";\n\n\t@if $color != null {\n\t\t$color: str-slice(ie-hex-str($color), 4);\n\t\t$query: $query + \"&tint=%23#{$color},%23#{$color}\";\n\t}\n\n\t@if ($o-icons-use-local-assets == true and $color == null) {\n\t\tbackground-image: url(oAssetsResolve(\"bower_components/fticons/svg/#{$icon-name}.svg\", o-icons));\n\t} @else {\n\t\tbackground-image: url($service-url + $query + \"&format=svg\");\n\t}\n\n\t// ie7/8 fallback. Uses the `\\9` selector hack to target ie6-8.\n\t// Hack is documented here: http://browserhacks.com/#hack-ab1bcc7b3a6544c99260f7608f8e845e\n\t// It still needs to use the build service  <-- what does this comment mean?\n\tbackground-image: url($service-url + $query + \"&format=png&width=#{$container-width}\")\\9;\n\n\t// Prevents dimension styles being output by default.\n\t// Resolves issue where previous component `o-ft-icons` the mixin this replaces,\n\t// dimension styles were included within the $apply-base-styles block as well.\n\t@if ($apply-width-height == true) {\n\t\twidth: $container-width + 0px;\n\t\t@if ($container-height == null) {\n\t\t\t$container-height: $container-width;\n\t\t}\n\t\theight: $container-height + 0px;\n\t}\n\n\t@if ($apply-base-styles == true) {\n\t\t@include oIconsBaseStyles;\n\t}\n}\n\n/// Base styles for all icons\n@mixin oIconsBaseStyles() {\n\tdisplay: inline-block;\n\tbackground-repeat: no-repeat;\n\t// Doesn't work in ie8/7/6 in these cases the icon will fill the available space\n\tbackground-size: contain;\n\tbackground-position: 50%;\n\tbackground-color: transparent;\n\tvertical-align: baseline;\n}\n","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Button size\n/// Ouputs dimensions for a specific button size\n///\n/// @example\n/// .my-button--big {\n/// \t@include oButtonsSize(big);\n/// }\n///\n/// @param {String} $size\n@mixin oButtonsSize($size) {\n\t$button-dimensions: map-get($o-buttons-sizes, $size);\n\t$border-width: map-get($button-dimensions, border-width);\n\t$vertical-padding: 1/2 * (map-get($button-dimensions, min-height) - map-get($button-dimensions, font-size)) - $border-width;\n\n\tbackground-size: map-get($button-dimensions, background-size);\n\tmin-height: map-get($button-dimensions, min-height);\n\tmin-width: map-get($button-dimensions, min-width);\n\tpadding: $vertical-padding map-get($button-dimensions, padding-right) $vertical-padding map-get($button-dimensions, padding-left);\n\tfont-size: map-get($button-dimensions, font-size);\n\tline-height: map-get($button-dimensions, min-height) - $border-width * 2 - $vertical-padding * 2;\n\tborder-width: $border-width;\n}\n\n// Properties for a state of a given theme\n//\n// @param {String} $state - One of normal, hover, focus, selected, disabled, pressed\n@mixin _oButtonsPropertiesForState($theme, $state) {\n\t@if _oButtonsThemeHasState($theme, $state) {\n\t\t$states: map-get($o-buttons-themes, $theme);\n\n\t\t@each $property, $value in map-get($states, $state) {\n\t\t\t#{$property}: #{$value};\n\t\t}\n\t}\n}\n\n/// Button theme construct\n/// Ouputs styles for all button states\n///\n/// @example\n/// .my-button--standout {\n/// \t@include oButtonsTheme(standout);\n/// }\n///\n/// @param {String} $theme\n@mixin oButtonsTheme($theme) {\n\t@include _oButtonsPropertiesForState($theme, normal);\n\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed\n\t&[aria-selected=true], // e.g. A selected tab or page number in pagination\n\t&[aria-pressed=true] { // e.g. A \"follow\" button that is pressed\n\t\t@include _oButtonsPropertiesForState($theme, pressedselected);\n\t}\n\n\t&[disabled] {\n\t\t@include _oButtonsPropertiesForState($theme, disabled);\n\t}\n\n\t&:not([disabled]) {\n\t\t&:focus:not(:hover),\n\t\t#{$o-hoverable-if-hover-enabled} &:hover {\n\t\t\t@include _oButtonsPropertiesForState($theme, hover);\n\t\t}\n\t\t&:active {\n\t\t\t@include _oButtonsPropertiesForState($theme, active);\n\t\t}\n\t}\n\t&:focus:not(:active):not(:hover) {\n\t\t@include _oButtonsPropertiesForState($theme, focus);\n\t}\n}\n\n/// Button construct\n/// Basic button styling and default states for specific theme and size\n///\n/// @example Base styles\n///  .my-button {\n///  \t@include oButtons;\n///  }\n/// @example Custom theme\n///  .my-inverse-button {\n///  \t@include oButtons($theme: inverse);\n///  }\n/// @example Custom size\n///  .my-big-button {\n///  \t@include oButtons(big);\n///  }\n/// @example Custom size and theme\n///  .my-big-standout-button {\n///  \t@include oButtons(big, standout);\n///  }\n///\n/// @param {String} $size (medium)\n/// @param {String} $theme (standard)\n@mixin oButtons($size: medium, $theme: standard) {\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tvertical-align: middle;\n\tmargin: 0;\n\toutline: 0;\n\tborder-style: solid;\n\ttext-align: center;\n\ttext-decoration: none;\n\tfont-family: $o-buttons-font-family;\n\tfont-weight: $o-buttons-font-weight;\n\tborder-radius: $_o-buttons-border-radius;\n\tcursor: pointer;\n\ttransition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;\n\t-moz-appearance: none;\n\t-webkit-appearance: none;\n\tuser-select: none;\n\tbackground-clip: border-box;\n\t// Prevent fat white type on a dark background\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\n\t@include oButtonsSize($size);\n\t@include oButtonsTheme($theme);\n\n\t// Same as aria-disabled:\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled\n\t// This is a common style for all button themes\n\t&[disabled] {\n\t\tpointer-events: none;\n\t\topacity: 0.4;\n\t\tcursor: default;\n\t}\n\n\t// Remove extra padding in Firefox\n\t&::-moz-focus-inner {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t}\n}\n","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Silent mode: on (true) or off (false)\n/// Set to false to output default button classes\n///\n/// @type Boolean\n$o-buttons-is-silent: true !default;\n\n/// Default button class used when $o-buttons-is-silent is true\n///\n/// @type String\n$o-buttons-class: o-buttons !default;\n\n/// Button font family\n///\n/// This is required to override default system form element styling,\n/// since `<input>`, `<button>`… don't inherit global font styles\n///\n/// @type String\n$o-buttons-font-family: MetricWeb, sans-serif !default;\n\n/// Button font weight\n///\n/// @type String\n$o-buttons-font-weight: 600 !default; // Semibold\n\n/// Button sizes, with their attached properties\n///\n/// @type Map\n$o-buttons-sizes: (\n\tsmall: (\n\t\tbackground-size: 12px,\n\t\tfont-size: 12px,\n\t\tmin-height: 22px,\n\t\tmin-width: 22px,\n\t\tpadding-left: 7px,\n\t\tpadding-right: 7px,\n\t\tborder-width: 1px,\n\t),\n\tmedium: (\n\t\tbackground-size: 16px,\n\t\tfont-size: 14px,\n\t\tmin-height: 26px,\n\t\tmin-width: 26px,\n\t\tpadding-left: 8px,\n\t\tpadding-right: 8px,\n\t\tborder-width: 1px,\n\t),\n\tbig: (\n\t\tbackground-size: 18px,\n\t\tfont-size: 18px,\n\t\tmin-height: 36px,\n\t\tmin-width: 36px,\n\t\tpadding-left: 18px,\n\t\tpadding-right: 18px,\n\t\tborder-width: 1px,\n\t)\n) !default;\n\n/// Border-radius\n///\n/// @type Number\n$_o-buttons-border-radius: 3px;\n\n/// Button themes, with their respective states\n/// Each state is a Map of CSS properties, find\n/// all theme definitions in _themes.scss\n///\n/// @type Map\n$o-buttons-themes: (\n\tstandard: $o-buttons-themes__standard,\n\tstandout: $o-buttons-themes__standout,\n\tinverse: $o-buttons-themes__inverse,\n\tuncolored: $o-buttons-themes__uncolored,\n\tb2c: $o-buttons-themes__b2c\n) !default;\n\n/// List of icons to generate classes for icon buttons.\n/// Build service users will only be able to use these icons, but there is\n/// a mixin for people using this via Sass, meaning any icon in 'fticons' is\n/// available to those users.\n/// Icon names as used in fticons\n///\n/// @type List\n$o-buttons-icons: \"arrow-left\", \"arrow-right\" !default;\n",".home-template {\n\n  .primary-action {\n    @include layout-container();\n    > div {\n      @include oGridRow();\n      > div {\n        @include oGridColspan((default: 12, S:12, M: 6));\n      }\n    }\n\n    .chat, .contact {\n      border-bottom: solid 1px #979797;\n    }\n\n    @include oGridRespondTo($until: M) {\n      .chat {\n        margin-top: 0;\n      }\n      .old-ft {\n        display: none;\n      }\n    }\n    @include oGridRespondTo($from: M) {\n      .chat, .contact {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .content {\n    @include layout-container();\n\n\n    h2.o-typography-subhead--crosshead {\n      @include MetricWebRegular();\n\n      border-bottom: none;\n      border-top: 1px solid #979797;\n      font-size:26px;\n      color:#4a4a4a;\n      margin-top: 0;\n      margin-bottom: 0;\n      padding-top: 20px;\n      &.top-answer {\n        margin-top: 60px;\n      }\n    }\n\n    ul.help-topic {\n      @extend .list-2-column;\n      padding-left: 0;\n      margin-top: 0;\n\n      @extend .list-li-caret;\n    }\n  }\n\n  div.top-answer {\n    margin-top: 10px;\n    width: 70%;\n    @include oGridRespondTo($until: M) {\n      width: 100%;\n    }\n    .page-list-ext-item {\n      margin:0 0 20px 0;\n\n      h3.page-list-ext-title {\n        @include MetricWebSemiBold();\n        font-size:20px;\n        color:oColorsGetPaletteColor(\"grey-tint5\");\n        line-height:26px;\n        margin-bottom: 0;\n        margin-top: 0;\n\n        a {\n          @include MetricWebSemiBold();\n          font-size:20px;\n          color:oColorsGetPaletteColor(\"org-b2c-dark\");\n          line-height:26px;\n          text-decoration: none;\n          &:hover {\n            text-decoration: none;\n            border-bottom: 1px dotted oColorsGetPaletteColor(\"org-b2c-dark\");\n          }\n        }\n      }\n    }\n    .page-list-ext-item-content {\n      @include content-text();\n    }\n  }\n}","////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Add a custom palette color\n///\n/// @example scss\n///  @include oColorsSetColor('grey-tint20': #cccccc);\n///\n/// @param {String} $name - Name in the palette\n/// @param {color} $color - Color (rgb, hex, hsl…)\n@mixin oColorsSetColor($name, $color) {\n\t$newcolor: ($name: $color);\n\t$o-colors-palette: map-merge($o-colors-palette, $newcolor) !global;\n}\n\n/// Add a custom use case property\n///\n/// @example scss\n///  @include oColorsSetUseCase(email, text, 'grey-tint5');\n///\n/// @param {String} $usecase - Name of the use case\n/// @param {String} $property - Property it applies to\n/// @param {String} $color - One of $o-colors-palette\n@mixin oColorsSetUseCase($usecase, $property, $color) {\n\t$propmap: ($property: $color);\n\n\t// The use-case already exists,\n\t// combine its existing properties with the new one\n\t@if (map-has-key($o-colors-usecases, $usecase)) {\n\t\t$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);\n\t}\n\n\t$newmap: ($usecase: $propmap);\n\n\t// Add the use-case and its properties to the global use-case map\n\t$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;\n}\n\n/// Output property declarations for all defined properties for the specified use case\n///\n/// @example scss\n///  .my-thing {\n///  \t@include oColorsFor(custom-box box);\n///  }\n///  .my-other-thing {\n///  \t@include oColorsFor(custom-box box, background border);\n///  }\n///\n/// @param {String|list} $useCaseList\n/// @param {String|list} $propertyList [all]\n@mixin oColorsFor($useCaseList, $propertyList: all) {\n\t// Fail silently when a use case doesn't exist,\n\t// taking advantage of how Sass treats the `null` keyword:\n\t//\n\t// \t\t$foo: null;\n\t// \t\tel { color: $foo; } // outputs nothing\n\t$args: (default: null);\n\n\t@if ($propertyList == 'all' or index($propertyList, 'background')) {\n\t\tbackground-color: oColorsGetColorFor($useCaseList, background, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'text')) {\n\t\tcolor: oColorsGetColorFor($useCaseList, text, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'border')) {\n\t\tborder-color: oColorsGetColorFor($useCaseList, border, $options: $args);\n\t}\n}\n","////\n/// @group Use cases\n/// @link http://registry.origami.ft.com/components/o-typography\n////\n\n/// Make something bold\n@mixin oTypographyBold {\n\tfont-weight: 600;\n}\n\n/// Make something italic\n@mixin oTypographyItalic {\n\tfont-style: italic;\n}\n\n/// Superscript text\n@mixin oTypographySuper {\n\t@include oTypographySans(s);\n\tdisplay: inline-block;\n\tmargin-top: -3px;\n\tvertical-align: super;\n}\n\n/// Subscript text\n@mixin oTypographySub {\n\t@include oTypographySans(s);\n\tdisplay: inline-block;\n\tmargin-bottom: -5px;\n\tvertical-align: sub;\n}\n\n/// Link styles\n@mixin oTypographyLink {\n\t@include oColorsFor(link, text);\n\ttext-decoration: none;\n\tcursor: pointer;\n\tborder-bottom: 1px dotted oColorsGetColorFor(link, text);\n\n\t#{$o-hoverable-if-hover-enabled} &:hover {\n\t\t@include oColorsFor(link-hover, text);\n\t\tborder-bottom-color: transparent;\n\t}\n}\n\n// Caption\n@mixin oTypographyCaption {\n\t@include oTypographySansData(m);\n\t@include oTypographyItalic;\n\t@include oTypographyBodyBlock;\n}\n"],"sourceRoot":"/source/"}